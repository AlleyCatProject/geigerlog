### geigerlog.cfg
### The GeigerLog configuration file with default settings

###############################################################################
##    This file is part of GeigerLog.
##
##    GeigerLog is free software: you can redistribute it and/or modify
##    it under the terms of the GNU General Public License as published by
##    the Free Software Foundation, either version 3 of the License, or
##    (at your option) any later version.
##
##    GeigerLog is distributed in the hope that it will be useful,
##    but WITHOUT ANY WARRANTY; without even the implied warranty of
##    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
##    GNU General Public License for more details.
##
##    You should have received a copy of the GNU General Public License
##    along with GeigerLog.  If not, see <http://www.gnu.org/licenses/>.
###############################################################################

# Usage:
# All lines beginning with '#' are comments and will be ignored
#
# The structure is:
#       [Section]
#       # comment
#       # options: value1 | value2 | ...
#       # default = value
#       parameter = value
#
# NOTE: non-acceptable values will be silently ignored, but a debug
#       message will be printed to the terminal and log file
#
# NOTE: There MUST NOT be more than one entry per parameter, or an error
#       will be reported, and the program ends!



[Defaults]
# With no devices being connected, some values remain undefined. This is
# corrected here with generic defaults

# CALIBRATION:
# given in units of µSv/h/CPM, individually per tube. If none is given, then
# the defaults will be used.
# option: <any positive number>
# 1st tube: default     = 0.0065
DEFcalibration          = 0.0065

# 2nd tube: default     = 0.194
DEFcalibration2nd       = 0.194
#DEFcalibration2nd       = 0.0065
#DEFcalibration2nd       = 0.48

# RadMon tube: default  = 0.0065
DEFRMcalibration        = 0.0065


[Audio]

# PHONON:
# Phonon is used for audio feedback, helpful in particular to get your attention
# on errors. Unfortunately, there is a problem on certain Windows installations.
# Phonon is therefore inactivated by default. You can activate it here.
# options: active | inactive
# default = inactive
phonon    = inactive
#phonon    = active


[Serial Port]

# PORT:
# Name of the serial port; different in Linux and Windows
# NOTE: Port settings may be overwritten by command line options!
# see Help->Quickstart for instructions. For more details see the online text:
# 'HOWTO - Read-Write Permissions Serial Port on Linux.TXT' at:
# https://sourceforge.net/projects/geigerlog/files/  and manual
# options: Linux:   /dev/ttyUSB0 | /dev/ttyUSB1 | /dev/geiger | and others
# options: Windows: COM3 | COM12 | and others
# default = /dev/ttyUSB0
#port      = /dev/ttyUSB0
port      = /dev/geiger

# BAUDRATE:
# The old 300 devices had a default baudrate of 57600; the newer 320, 500 and
# 600 series have a default of 115200.
# NOTE: Baudrate settings may be overwritten by command line options!
# The device ITSELF must have been set to the selected baudrate!
# see Help->Quickstart for instructions and manual
# options: 1200 | 2400 | 4800 | 9600 | 14400 | 19200 | 28800 | 38400 | 57600 | 115200
# default = 57600
#baudrate  = 57600
baudrate  = 115200

# TIMEOUT (READ):
# in seconds; for better speed try small number first; 1(fast) ... 10(slow)
# choose greater number when reading problems occur
# NOTE: any number zero or negative will be set to 3
# options: <any positive number>
# default = 3
timeout   = 3

# TIMEOUT WRITE:
# in seconds; choose greater number when writing problems occur
# NOTE: any number zero or negative will be set to 1
# options: <any positive number>
# default       = 1
timeout_write   = 1

# REGULAR SERIAL PORTS
# In USB Autodiscovery Mode Python will find regular Serial Ports like
# /dev/ttySN, N=1,2,3,... in addition to the USB-to_SERIAL ports.
# All of the GMC counters use only the /dev/ttyUSBN, N=1,2,3,... ports.
# Use these settings:
# ttyS = ignore : Ignore  regular Serial Ports when doing USB Autodiscovery
# ttyS = include: Include regular Serial Ports when doing USB Autodiscovery
# options:  ignore | include
# default = ignore
ttyS      = ignore


[RadMonPlus]
# a device from here: https://sites.google.com/site/diygeigercounter/gk-radmon
# The RM+ can act as a Geiger counter providing CPM data, and with an optional
# BME280 sensor additionally acts as an environmental monitor for Temperature,
# Pressure, and Humidity. The RM+ must be configured to send its data to an
# MQTT server. This server's IP must be made known to GeigerLog.
#
# The RM+ update cycle can be configured at the RM+, but it is best set to
# 60sec for CPM readings, and with an extra of about 7 sec for reading the
# environmental sensor and sending the data, the total cycle will be about 67sec.
#
# GeigerLog connects to the MQtt server for new data and logs them. GeigerLog
# can read all 4 variables. If no new data are found, the record contains empty
# values, but logging/displaying/analyzing will not be impacted.

# Demostration Mode
# A Demo-Mmode can be activated in GeigerLog, which defines my per­sonal
# RadMon+ device as active, and allows any user of GeigerLog to read genuine
# real-time data from a RadMon+.

# RM SERVER IP:
# if one is provided, the RadMon+ is assumed to be active. This IP can be
# either a numerical IP like "10.0.0.81" (in local network), or "198.41.30.241",
# or a URL like "iot.eclipse.org".
# options:  None | <IP address>
# default   = None
# Demo-Mode:  RMserverIP = iot.eclipse.org
#RMserverIP = None
RMserverIP = iot.eclipse.org


# RM SERVER PORT:
# Standard port is 1883
# options:   <port number>
# default    = 1883
# Demo-Mode: RMserverPort = 1883
RMserverPort = 1883

# RM SERVER FOLDER:
# This must be the same folder as defined during the setup of the RadMon+ device.
# for details search for MQTT
# CAUTION: you get flooded with useless messages when you enter no proper folder!
# A blank (' ') is not allowed in the folder name!
# if no final '/' is given, it will be auto-added
# options:      <folder as defined in your RadMon+ device, ending with '/'>
# default      = /
# Demo-Mode:   RMserverFolder = geigerlog/
#RMserverFolder = /
RMserverFolder = geigerlog/

# RM CALIBRATION:
# Calibration for the tube used in the RadMon+ setting in units of µSv/h/CPM
# Note: the calibration within RadMon+ is ignored.
# Option 'auto' is 0.0065, the number used by GQ for the M4011 tube
# options:       auto | <any positive number>
# default     =  auto
RMcalibration =  auto

# RM VARIABLES:
# The RM+ can provide only CPM data, or only T, P, H (Temperature, Pressure,
# Humidity) data, or all 4 of them. The CPM values are coded as 'R' to
# distinguish from the GMC counter readings.
# As the T, P, H data come from one sensor, they are either all present or
# none, yet you can select or ignore them individually for logging.
# Option 'auto' defaults to 'T, P, H, R'
#
# options:        auto | <any combination of T, P, H, R>
# default       = auto
RMvariables     = auto

# RM TIMEOUT:
# establishing a connection in a local network takes ~10 milliseconds, but to a
# remote server on poor connections might take several hundred milliseconds.
# To be on the safe side a timeout of 3 sec is set, as used for the serial port
# NOTE: any number zero or negative will be set to 3
# options:      <any positive number>
# default       = 3
RMtimeout       = 3


[Device]
# This is valid for all GMC devices.
#
# MEMORY:
# The memory is 64kB in the older devices, and 1 MB in the newer ones. If for
# any reason this needs to be changed, it can be configured here.
# 64kB = 2**16 =    65 536 Bytes; fixed setting
# 1MB  = 2**20 = 1 048 576 Bytes; fixed setting
# auto = either 64kB or 1MB, set within GeigerLog
#    In 'auto' mode the devices are set to:
#    300 series: 64kB
#    320 series: 1MB
#    500 series: 1MB
#    600 series: 1MB
#
# options: auto | 64kB | 1MB
# default = auto
memory    = auto
#memory    = 64kB

# SPIRPAGE:
# The memory is organized in pages of 4k (4096) bytes. Due to firmware bugs,
# the history readout may or may not be possible in 4k pages, but only in 2k
# pages. In addition, a bugfix may have to be applied! See manual for details.
#
# In 'auto' mode the devices are set to:
# 300 series:  2k
# 300E series: 4k - bugfix needed!
# 320 series:  4k - bugfix needed!
# 500 series:  2k
# 600 series:  2k
#
# options:  auto | 2k | 4k
# default = auto
SPIRpage  = auto
#SPIRpage  = 2k

# FIRMWARE BUGFIX:
# See the manual for an explanation of the firmware bugs.
#
# In 'auto' mode the devices are set to:
# 300 series:  no
# 300E series: yes
# 320 series:  yes
# 500 series:  no
# 600 series:  no
#
# options: auto | yes | no
# default   = auto
SPIRbugfix  = auto

# CONFIGURATION MEMORY SIZE:
# This is separate from the memory! On the older 3XX units it was 256 bytes.
# On the newer 500, 600 units it is 512 bytes.
#
# In 'auto' mode the devices are set to:
# 300 series: 256 bytes
# 320 series: 256 bytes
# 500 series: 512 bytes
# 600 series: 512 bytes
#
# options: auto | 256 | 512
# default  = auto
configsize = auto

# CALIBRATION:
# With the GMC-500+ having 2 tubes, and different ones, an additional 2nd
# calibration factor is needed. This calibration is for the 1st (or only) tube.
#
# The device has 3 calibration points, but they all define only a single-point
# linear calibration of CPM * 0.0065 = µSv/h.
# If set to auto, GeigerLog's internal settings will be used
# If a number is given then this number will be used
#
# In 'auto' mode the devices are set to:
# 300  series: 0.0065   µSv/h / CPM
# 320  series: 0.0065   µSv/h / CPM
# 500  series: 0.0065   µSv/h / CPM
# 500+ series: 0.0065   µSv/h / CPM for the first tube
#              0.1940   µSv/h / CPM for the second tube (is wrong, see below)
# 600  series: 0.0065   µSv/h / CPM
# 600+ series: 0.002637 µSv/h / CPM
#
# options: auto | <any positive number>
# default   = auto
calibration = auto

# CALIBRATION 2nd TUBE:
# see Reply #21 in:
# http://www.gqelectronicsllc.com/forum/topic.asp?TOPIC_ID=5148
# "The GMC-500+ low sensitivity tube conversion rate is 0.194 uSv/h per
# CPM. It is about 30 times less than M4011."
# However, there was a calibration point #3 setting given earlier of
# 25CPM=9.75µSv/h =>0.390 µSv/h/CPM.
#
# options:        auto | <any positive number>
# default =       auto
#calibration2nd =  auto

#calibration2nd = 0.194   # in the 500+ firmware
#calibration2nd = 0.390   # had been in the 500+ firmware

# see Th and K experiments in:
# http://www.gqelectronicsllc.com/forum/topic.asp?TOPIC_ID=5369
#calibration2nd = 0.4680 # from Th experiment # Reply #1
#calibration2nd = 0.4940 # from K experiment  # Reply #10
#calibration2nd = 0.48   # final  value, see Reply #10
calibration2nd = 0.48

# VOLTAGE:
# in the 300 series the battery voltage is reported as a single byte, and the
# voltage is byte/10; e.g. a byte value of 41 is 4.1 Volt
# in the 500 and 600 series the volt is reported as a 5 byte ASCII byte string;
# e.g. b'3.76v' is 3.76 Volt
# options: auto | 1 | 5
# default    = auto
voltagebytes = auto

# ENDIANNESS:
# For the three bytes of the calibration µSv/h values the order of bytes has
# changed in the latest firmware. It is now:
# 300 series:       little-endian
# 500 / 600 series: big-endian
# options:  auto | little | big
#default:   = auto
endianness  = auto

# VARIABLES:
# All GMC counter provide CPM and CPS readings. Only the GMC-500+ device,
# having 2 tubes installed, and having at least firmware 1.18, provides
# additional individual readings for each tube as counts per MINUTE (CPM1st and
# CPM2nd) and counts per SECOND (CPS1st and CPS2nd).
#
# The '1st' and '2nd' settings can be activated for all other counters too, and
# will not result in an error, but will provide the exact same as CPM or CPS!
#
# The option 'auto' defaults to 'CPM, CPS' to all counters, except for the
# GMC-500+, where it will be 'CPM, CPS, CPM1st, CPM2nd, CPS1st, CPS2nd'.
# Note: On the GMC-500+ both CPM and CPS are useless numbers as they are the
# sum of both tubes: CPM=CPM1st+CPM2nd, CPS=CPS1st+CPS2nd
# This is no meaningful information!
#
# options:      auto | <any combination of CPM, CPS, CPM1st, CPM2nd, CPS1st, CPS2nd>
# default       = auto
variables       = auto
#variables       = CPM, CPS, CPM1st, CPM2nd, CPS1st, CPS2nd
#variables       = CPM


# NBYTES:
# the number of bytes returned by the CPM, CPS, CPM1st, CPM2nd, CPS1st and CPS2nd
# commands. Normally this is 2 bytes, but GMC500+ counter with firmware 1.18 or
# later delivers 4 bytes
# options:       auto | 2 | 4
# default       = auto
nbytes          = auto


[Folder]
# Configure the data directory
# A relative path will be relative to the built-in default data folder.
# A relative path must be given:
# in Linux:     beginning WITHOUT slash ('/')
# in Windows:   beginning WITHOUT drive name (e.g. 'c:') and
#               WITHOUT backslash ('\') or slash ('/')
# An absolute path must be given:
# in Linux:     beginning WITH slash ('/')
# in Windows:   beginning WITH drive name (e.g. 'c:')
# options:      <empty> | <any folder name NOT ending with slash>
# default =     <empty; i.e. no change from built-in default>
data      =


[Logging]
# LOGCYCLE:
# logging cycle in seconds
# Note: when CPS is chosen, the adequat logcycle is 1 sec
#       when CPM is chosen, the adequat logcycle is 60 sec
# shorter logcycle allow to more quickly see the count rate and change, but
# do NOT provide more information for long runs
# options: <any number 0.1 or greater>
# default = 3
logcycle  = 3


[Graphic]
# MOVING AVERAGE:
# in sec; 1 min = 60 sec is adequate for seeing CPS recordded data as CPM equiv
# options: <any number equal or greater than 1>
# default   = 60
mav_initial = 60


[Plotstyle]
# If your plot does not come out as expected, check the geigerlog.proglog file
# for messages; you may have set an unrecognizeable style.

# LINESTYLE:
# Allowed names at:
# https://matplotlib.org/gallery/lines_bars_and_markers/line_styles_reference.cycle
# options:  solid | dashed | dashdot | dotted
# default = solid
linestyle = solid

# LINECOLOR:
# Note: linecolor is deprecated; will be ignored.
#
# The name of the color to be used for lines and markers. Allowed
# color names at https://matplotlib.org/examples/color/named_colors.html
# In addition, colors can be given as values in hexadecimal notation, like
# '#FEBA75' (in RGB order, with leading '#').
# options: these 10 color names are suggested for best contrast: blue, red,
# black, green, orange, cyan, magenta, purple, gold, pink
# default = blue
linecolor = blue

# LINEWIDTH:
# The width of the line as integer or floating point >= 0.
# 0 (zero) makes the line invisible.
# options:  <any number greater or equal to 0>
# default = 1
linewidth = 1

# MARKERSTYLE:
# Allowed styles at:
# https://matplotlib.org/api/markers_api.html#module-matplotlib.markers
# options: 'o' (circle) | "s" (square) | "p" (pentagon) | "*" (star) |
# "h" (hexagon) | "+" (plus) | "x" (x) | "D" (diamond).
# default   = o (small cap o, like in oscar)
markerstyle = o

# MARKERSIZE:
# The size of the marker for a datapoint. A marker size of x has the same
# diameter as a line of width x is wide, i.e. the marker would not be
# visible on the line!
# GeigerLog reduces the markersize with increasing number of data points. This
# is the starting size for a single data point.
# options:  <any number greater or equal to 0>
# default   = 15
markersize  = 15


[Window]
# WINDOW POSITION AND SIZE:
# The window is positioned at the top right corner; Dimensions in pixel.
# GeigerLog will run on a screen size as small as 1024x768, but it is cumbersome
# to use and not recommended. Minimum screen size should be 1366x768.
# Depending on Window manager and custom configuration, the default may not
# fit. Change to fit for your screen and settings.
# Default assumes 1366x768 with 2 panels of height 24 and std window bar
# options: <any positive number>
# default width  = 1366
#         height = 720
width            = 1366
height           = 720

# WINDOW MAXIMIZE:
# window size can be auto or maximized. On auto it will be tried to set to
# width x height as defined above. On maximized the window will be maximized.
# options:  auto | maximized
# default = auto
size      = auto


[Manual]
# MANUAL NAME:
# Filename of the GeigerLog manual included with the code.
# If set to 'auto' the first found local file beginning with 'GeigerLog-Manual'
# will be used. If none found, GeigerLog looks online.
# options: auto | <full name like: 'GeigerLog-Manual-v0.9.05.pdf'>
# default   = auto
manual_name = auto


[Worldmaps]
# GQ's gmcmap website and url for uploading readings
GMCmapWebsite       = http://www.gmcmap.com
GMCmapURL           = log2.asp

# WiFi setting in your local network
GMCmapSSID          = myssid
GMCmapPassword      = mypassword

# period in min to wait before uploading next value
GMCmapPeriod        = 2

# User and Counter IDs valid for the gmcmap.
# Register at http://www.gmcmap.com/ and obtain a UserID (probably 5 digits)
# and a CounterID (probably 11 digits).
# default = <empty when undefined>
#GMCmapUserID    =
#GMCmapCounterID =

# Dummy values:
# try these user and counter IDs for testing without creating a bad entry,
# as the server will reject the data with "Error! User not found.ERR1."
GMCmapUserID        = 12345
GMCmapCounterID     = 12345678901


[Scaling]
# An option to scale the data with a math formula. The formula may include
# math functions. The scaled data will be logged, not the original data!
#
# Use to apply calibration to the variables. E.g., if Temperatur is 2.4 °C too
# high, you can define to subtract 2.4°C from Temperature.
# Or use it to apply a dead time correction to CPM or CPS.
# Or use it to rescale the Air-Pressure to sealevel.

# + - * / :   basic math
# **:         raise to the power, e.g. 2**8  (=256)
# VAL:        the value to be scaled, the actual measurement value
# LOG:        log to base e; natural log
# LOG10:      log to base 10
# LOG2:       log to base 2
# SIN:        sine
# COS:        cosine
# TAN:        tangent
# SQRT:       square root
# CBRT:       cube root
# ABS:        absolute value

# example:    val - 1000
# example:    SQRT(val) * 5 + 100
# example:    ABS((LOG10(val)+1000)/3.14) + 10

# Content:    val | <math formula> | <empty>
# Default:    val

# if only 'val' is given, then no modification will be applied to the value

# CPM correction for deadtime:
# is defined by formula:      CPM_true = CPM_obs / (1 - cpm_obs * deadtime)
# Deadtime is assumed to be 200µsec
# Deadtime MUST be used in the time unit used for the counts, i.e. if you use:
# CPM: unit is minutes (200µs = 200 * 1E-6 / 60 minutes =  3.333*10E-6 minutes)
# CPS: unit is seconds (200µs = 2*10E-4 seconds)
# take the int of it to not confuse Poisson tests with fractional numbers!

# Pressure reduction to sea level - at altitude < 50m
# "Pressure Reduction Formula", WORLD METEOROLOGICAL ORGANIZATION,
# CIMO/ET-Stand-1/Doc. 10, (20.November.2012)
# chapter 3.11.2 Low-level stations
# At low-level stations (namely, those at a height of less than 50 m above mean
# sea level), pressure readings should be reduced to mean sea level by adding
# to the station pressure a reduction constant C given by the following
# expression: C = p . Hp /29.27 Tv  (3.3)
# valid for heights less than 50m aboe sea level
# p is the observed station pressure in hectopascals; Hp is the station
# elevation in metres; and Tv is the mean annual normal value of virtual
# temperature at the station in kelvins.

# Pressure reduction to sea level - any altitude, but needs T
# https://keisan.casio.com/exec/system/1224575267
# Sea level pressure: press ure in [hPa]
# p0 at sea level, p at altitude h[m], T[°C]
# p0 = p * (1 - (0.0065 * h) / (T + 0.0065 * h + 273.15))**(-5.257)

# GMC variables
ScaleCPM    = int(val / (1 - val * 200 * 1E-6 / 60))
ScaleCPS    = int(val / (1 - val * 200 * 1E-6))

ScaleCPM1st = val
ScaleCPS1st = val

ScaleCPM2nd = val
ScaleCPS2nd = val

# RadMon+ variables
# T_RM+ calibrated against Greisinger G1720 2018-08-17
ScaleT      = val - 1.8
#ScaleP      = val
#ScaleP      = val + val * 85 / (29.27 * 293)
# using h= 85m, T=20°C
ScaleP      = val * (1 - (0.0065 * 85) / (20 + 0.0065 * 85 + 273.15))**(-5.257)

ScaleH      = val
ScaleR      = val

